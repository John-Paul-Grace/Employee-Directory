{"version":3,"sources":["utils/API.js","components/Grid/index.js","components/Navbar/index.js","components/EmployeeCard/index.js","App.js","index.js"],"names":["API","getEmployees","fetch","Container","fluid","children","className","Row","ascending","React","Children","toArray","sort","next","current","nextLetter","currentLetter","index","key","charAt","localeCompare","Col","Navbar","sortHandler","searchHandler","type","onClick","placeholder","aria-label","onChange","EmployeeCard","employee","src","picture","large","alt","name","last","first","email","cell","location","city","country","App","useState","employeesState","setEmployeesState","filteredEmployeesState","setFilteredEmployeesState","sortState","setSortState","useEffect","then","res","json","data","results","event","preventDefault","search","target","value","toLowerCase","filtered","filter","lastName","substring","length","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab3d12be.chunk.js","sourcesContent":["const API = {\r\n    getEmployees: function() {\r\n        return fetch(\"https://randomuser.me/api/?results=10\");\r\n    }\r\n}\r\n\r\nexport default API;\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children, ascending }) {\r\n  const compare = (next, current) => {\r\n    let index = 1;\r\n    let nextLetter;\r\n    let currentLetter;\r\n\r\n    do {\r\n      index++;\r\n      nextLetter = next.key.charAt(index);\r\n      currentLetter = current.key.charAt(index);\r\n    }\r\n    while(typeof nextLetter === \"string\" && typeof currentLetter === \"string\" && nextLetter === currentLetter);\r\n  \r\n    if (ascending) {\r\n      return currentLetter.localeCompare(nextLetter);\r\n    }\r\n    else {\r\n      return nextLetter.localeCompare(currentLetter);\r\n    }\r\n  }\r\n\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{React.Children.toArray(children).sort(compare)}</div>;\r\n}\r\n\r\n// This Col component lets us use bootstrap columns\r\nexport function Col({ children }) {\r\n  return (\r\n    <div className=\"col-lg-4 col-md-6\">{children}</div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Navbar({ ascending, sortHandler, searchHandler }) {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <div className=\"navbar-brand\">Employee Directory</div>\r\n\r\n      <form className=\"form-inline\">\r\n        <button className=\"btn btn-outline-success mr-5 px-5 font-weight-bold\" type=\"button\" onClick={sortHandler}>\r\n          Sort By Name {ascending ? <span>&#9650;</span> : <span>&#9660;</span>}\r\n        </button>\r\n\r\n        <input className=\"form-control\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={searchHandler} />\r\n      </form>\r\n    </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction EmployeeCard({ employee }) {\r\n  return (\r\n    <div className=\"card width-18 border-primary\">\r\n      <div className=\"centered\">\r\n        <img src={employee.picture.large} className=\"card-img-top width-90per mt-2\" alt=\"...\" />\r\n      </div>\r\n      \r\n      <div className=\"card-body bg-grey mx-2 mb-2 mt-1\">\r\n        <h5 className=\"card-title font-weight-bold\">{employee.name.last}, {employee.name.first}</h5>\r\n\r\n        <div className=\"card-title subTitleStyle\">Email: <span className=\"textStyle\">{employee.email}</span></div>\r\n\r\n        <div className=\"card-title subTitleStyle\">Phone: <span className=\"textStyle\">{employee.cell}</span></div>\r\n\r\n        <div className=\"card-title subTitleStyle\">\r\n          Location: <span className=\"textStyle\">{employee.location.city}, {employee.location.country}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeCard;\r\n","// Import our packages and components\r\nimport React, { useState, useEffect } from \"react\";\r\nimport API from \"./utils/API\";\r\nimport { Container, Row, Col } from \"./components/Grid\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport EmployeeCard from \"./components/EmployeeCard\";\r\n\r\nfunction App() {\r\n  // This state will store the entire list of employees\r\n  const [employeesState, setEmployeesState] = useState([]);\r\n\r\n  // This state will store a list of employees that can be filtered.\r\n  // This is the state that will actually be displayed\r\n  const [filteredEmployeesState, setFilteredEmployeesState] = useState([]);\r\n\r\n  // This state is a boolean value keeps track of whether we using ascending or descending order.\r\n  const [sortState, setSortState] = useState(false);\r\n\r\n  // This function toggles the sort state.\r\n  const handleSort = (event) => {\r\n    event.preventDefault();\r\n\r\n    setSortState(!sortState);\r\n  }\r\n\r\n  // This function filters the full list of employees using the value in the search bar\r\n  const filter = (event) => {\r\n    // First, we get the search value as all lower case.\r\n    const search = event.target.value.toLowerCase();\r\n\r\n    // Second, we make a filtered array using our full list.\r\n    const filtered = employeesState.filter(employee => {\r\n      // Gets the last name value from the current employee object.\r\n      let lastName = employee.name.last;\r\n\r\n      // Gets the first x letters from the last name.\r\n      // x is the length of the search value.\r\n      lastName = lastName.substring(0, search.length);\r\n\r\n      // If the first letters of the last name match the search, the employee\r\n      // is added to the array. Otherwise, we move on to the next employee.\r\n      if (lastName.toLowerCase() === search) {\r\n        return employee;\r\n      }\r\n      return null;\r\n    });\r\n\r\n    // Third, we set our filteredEmployeesState to the filtered array.\r\n    setFilteredEmployeesState(filtered);\r\n  }\r\n\r\n  // This functions runs once when the app starts.\r\n  // It gets a list of random employees and sets them in our states.\r\n  useEffect(() => {\r\n    API.getEmployees()\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setEmployeesState(data.results);\r\n        setFilteredEmployeesState(data.results);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        ascending={sortState}\r\n        sortHandler={handleSort}\r\n        searchHandler={filter}\r\n      />\r\n      <Container>\r\n        <Row ascending={sortState}>\r\n          {filteredEmployeesState.map(employee => {\r\n            return (\r\n              <Col key={employee.name.last}>\r\n                <EmployeeCard employee={employee} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}